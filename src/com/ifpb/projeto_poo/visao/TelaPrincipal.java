/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ifpb.projeto_poo.visao;

import com.ifpb.projeto_poo.controle.UsuarioDao;
import com.ifpb.projeto_poo.controle.UsuarioDaoBanco;
import com.ifpb.projeto_poo.controle.UsuarioDaoBinario;
import com.ifpb.projeto_poo.modelo.Agenda;
import com.ifpb.projeto_poo.modelo.Compromisso;
import com.ifpb.projeto_poo.modelo.CompromissoTableModel;
import com.ifpb.projeto_poo.modelo.Usuario;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Matheus Moreira Luna
 */
public class TelaPrincipal extends javax.swing.JFrame {
    private UsuarioDao dao;
    private Usuario usuario;
    private DefaultComboBoxModel nomeAgendas;
    private CompromissoTableModel tableModel = new CompromissoTableModel();
    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal (){
        dao = new UsuarioDaoBinario();
        initComponents();
    }
    public TelaPrincipal(Usuario usuario) {
        String nomeAgendasString[];
        dao = new UsuarioDaoBinario();
        this.usuario = usuario;
        
        nomeAgendasString = new String[usuario.getAgendas().size()+1];
        nomeAgendasString[0] = "Tudo";
        for(int i = 1; i <= usuario.getAgendas().size(); i++){
            nomeAgendasString[i] = usuario.getAgendas().get(i-1).getNome();
        }
        
        nomeAgendas = new DefaultComboBoxModel(nomeAgendasString);
        
        
        if(usuario.getAgendas().size() > 0){
            for(Agenda a : usuario.getAgendas()){
                if(a.getCompromissos().size() > 0){
                    for(Compromisso c : a.getCompromissos()){
                        if(c.getDataHora().isAfter(LocalDateTime.now()) && c.getDataHora().isBefore(LocalDateTime.now().plusDays(30))){
                            tableModel.addRow(c);
                        }
                    }
                }
            }
            
        }
           
        initComponents();
        jTCompromissos.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        campoNome = new javax.swing.JLabel();
        campoAgenda = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTCompromissos = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btMCriaAgenda = new javax.swing.JMenuItem();
        btMCriarCompromisso = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        campoNome.setText(usuario.getNome());

        campoAgenda.setModel(nomeAgendas);

        jButton1.setText("Atualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTCompromissos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Hora", "Descrição", "Local"
            }
        ));
        jScrollPane2.setViewportView(jTCompromissos);

        jButton2.setText("Deletar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Editar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jMenu1.setText("Gerenciamento");

        btMCriaAgenda.setText("Criar agenda");
        btMCriaAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMCriaAgendaActionPerformed(evt);
            }
        });
        jMenu1.add(btMCriaAgenda);

        btMCriarCompromisso.setText("Criar compromisso");
        btMCriarCompromisso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMCriarCompromissoActionPerformed(evt);
            }
        });
        jMenu1.add(btMCriarCompromisso);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Perfil");

        jMenuItem3.setText("Editar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Sair");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(296, Short.MAX_VALUE)
                .addComponent(campoNome)
                .addGap(231, 231, 231))
            .addGroup(layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(campoAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(campoNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btMCriaAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMCriaAgendaActionPerformed
        String nome = JOptionPane.showInputDialog("Digite o nome da agenda:");
        if(usuario.create(new Agenda(nome))){
            String nomeAgendasString[];
            nomeAgendasString = new String[usuario.getAgendas().size()+1];
            nomeAgendasString[0] = "Tudo";
            for(int i = 1; i <= usuario.getAgendas().size(); i++){
                nomeAgendasString[i] = usuario.getAgendas().get(i-1).getNome();
            }       
            nomeAgendas = new DefaultComboBoxModel(nomeAgendasString);
            campoAgenda.setModel(nomeAgendas);
        }else{
            JOptionPane.showMessageDialog(null, "A agenda já existe!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
        try {
            dao.update(usuario);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Fala na conexão com arquivo", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Fala na conexão com arquivo", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Fala na conexão com o banco", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btMCriaAgendaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nomeAgenda = (String) campoAgenda.getSelectedItem();
        for(int i = 0; i < tableModel.getRowCount(); i++){
            tableModel.removeRow(i);
        }
        if(nomeAgenda.equals("Tudo")){
            for(int i = 0; i < usuario.getAgendas().size(); i++){
                if(usuario.getAgendas().get(i).getCompromissos().size() > 0){
                    for(int j = 0; j < usuario.getAgendas().get(i).getCompromissos().size(); i++){
                        if(usuario.getAgendas().get(i).getCompromissos().get(j).getDataHora().isAfter(LocalDateTime.now()) && usuario.getAgendas().get(i).getCompromissos().get(j).getDataHora().isBefore(LocalDateTime.now().plusDays(30))){
                            tableModel.addRow(usuario.getAgendas().get(i).getCompromissos().get(j));
                        }
                    }
                }
            }
        }
        else{
            if(usuario.read(nomeAgenda).getCompromissos().size() > 0){
                for(Compromisso c : usuario.read(nomeAgenda).getCompromissos()){
                    if(c.getDataHora().isAfter(LocalDateTime.now()) && c.getDataHora().isBefore(LocalDateTime.now().plusDays(30))){
                        tableModel.addRow(c);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btMCriarCompromissoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMCriarCompromissoActionPerformed
        if(usuario.getAgendas().size() > 0){
            TelaCompromisso tela = new TelaCompromisso(usuario);
            tela.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "É necessário criar primeiro uma agenda!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btMCriarCompromissoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String agenda = (String) campoAgenda.getSelectedItem();
        if(!agenda.equals("Tudo")){
            LocalDate data = (LocalDate) tableModel.getValueAt(jTCompromissos.getSelectedRow(), 0);
            LocalTime hora = (LocalTime) tableModel.getValueAt(jTCompromissos.getSelectedRow(), 1);
            LocalDateTime dataHora = LocalDateTime.of(data, hora);
            Compromisso compromisso = usuario.read(agenda).read(dataHora);
            Agenda a = usuario.read(agenda);
            a.delete(compromisso);
            usuario.update(a);
            try {
                dao.update(usuario);
            } catch (IOException ex) {
                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            tableModel.removeRow(jTCompromissos.getSelectedRow());
        }else{
            JOptionPane.showMessageDialog(null, "Só é possível remover se for selecionada alguma agenda", agenda, HEIGHT);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String agenda = (String) campoAgenda.getSelectedItem();
        if(agenda.equals("Tudo")){
            JOptionPane.showMessageDialog(null, "Deve ser selecionado uma agenda antes", "Erro", JOptionPane.ERROR_MESSAGE);
        }else{
            LocalDate data = (LocalDate) tableModel.getValueAt(jTCompromissos.getSelectedRow(), 0);
            LocalTime hora = (LocalTime) tableModel.getValueAt(jTCompromissos.getSelectedRow(), 1);
            LocalDateTime dataHora = LocalDateTime.of(data, hora);
            Compromisso compromisso = usuario.read(agenda).read(dataHora);
            TelaEditaCompromisso tela = new TelaEditaCompromisso(usuario, compromisso, agenda);
            tela.setVisible(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        TelaUsuario tela = new TelaUsuario(usuario);
        tela.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btMCriaAgenda;
    private javax.swing.JMenuItem btMCriarCompromisso;
    private javax.swing.JComboBox<String> campoAgenda;
    private javax.swing.JLabel campoNome;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTCompromissos;
    // End of variables declaration//GEN-END:variables
}
